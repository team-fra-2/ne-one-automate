{
  "id": "c5b9f2a5-f626-4583-b034-000568432c10",
  "realm": "neone",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": -1,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "b1dd48ff-6331-45cb-a062-e5e902c5cc08",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "c5b9f2a5-f626-4583-b034-000568432c10",
        "attributes": {}
      },
      {
        "id": "b5f7d3e6-e979-487b-99c3-d514f48dbdd7",
        "name": "default-roles-neone",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "c5b9f2a5-f626-4583-b034-000568432c10",
        "attributes": {}
      },
      {
        "id": "746326f0-3c81-441f-99bc-b513077f604e",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "c5b9f2a5-f626-4583-b034-000568432c10",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "87f9c146-4b52-45d8-b33f-202948fc6e5f",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "450ac5d8-9177-44e5-a5c8-4afb2a7e461e",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "e7e9bcea-a7dd-4589-871f-77af1ad17021",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "fa152078-29ca-4be7-8579-1dbed3e8da53",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "3e4c244f-bfec-4d25-a8e2-01c737eb2a3e",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "bf3a7ddd-a1ed-4990-9f13-3c562a2bf1d9",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "a499f708-23a5-4b55-b53e-fa533ca1b270",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "d73db25b-bdde-41e8-b945-c817c9135cc0",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "30039fca-7ad8-4491-839d-13f469fe83fd",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "dae64a34-6d72-4d66-a2f4-1edbba0b4a2e",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "0df08ad2-819f-48df-a997-21f0de508e57",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "170dccc9-a881-497d-9b88-501bbc03d6f7",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-authorization",
                "manage-events",
                "view-realm",
                "manage-realm",
                "view-authorization",
                "manage-users",
                "impersonation",
                "query-clients",
                "manage-identity-providers",
                "query-groups",
                "query-realms",
                "manage-clients",
                "view-clients",
                "view-events",
                "query-users",
                "view-users",
                "view-identity-providers",
                "create-client"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "2df29915-3b7c-4440-96ed-f02c674bcebb",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "c7bd4774-0481-4acb-b124-6fd8f271c47a",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "2907ca00-5268-4575-9108-2b976d6292c6",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "b1459a4c-a435-465a-b5ee-3c0056641c68",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "be71f86d-4980-40c7-bee4-e88b32e8fda2",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "48c7cb53-9190-4436-b265-3afa11e6974b",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        },
        {
          "id": "82f54896-5466-40a2-af64-7b2d7172f79b",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "neone-client": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "b082c4c2-9f12-4cee-bbf3-d378b3b22e8e",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "1effc205-fa4d-4bd9-b530-b0392373dd24",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "eddf5802-2830-4a48-9a4b-ad34f9c58947",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "9f2ff298-4871-4c42-9ee8-5173ebcceebb",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "d27aa1ba-ab87-4a26-93e1-efe21b660f0c",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "dd97ca30-85c4-44ff-9f7e-3d7373c563ae",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "06df9460-36e2-45f1-9c12-442c04c51c3c",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "41246f41-ea46-477d-96b4-117f914558af",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "51a3417a-2abf-4b0b-88df-5ab4319ad53f",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        },
        {
          "id": "f634cbf5-6660-4a84-a246-4de31af4d56f",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "b5f7d3e6-e979-487b-99c3-d514f48dbdd7",
    "name": "default-roles-neone",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "c5b9f2a5-f626-4583-b034-000568432c10"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "0ae898f3-d248-4eac-8681-b0381c82d6c0",
      "createdTimestamp": 1690372478089,
      "username": "service-account-neone-client",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "neone-client",
      "attributes": {
        "logistics_agent_uri": [
          "http://localhost:8080/logistics-objects/_data-holder"
        ]
      },
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-neone"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "0a20f052-7a06-4faf-b26d-fcd7ab2eab1c",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/neone/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/neone/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0541cdff-8216-478b-a3a2-24a93c360fd3",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/neone/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/neone/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "81d6efa6-7175-46ae-8613-47e0d33b2ebd",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1a59b863-a32f-451a-a345-231bf0c1c042",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1effc205-fa4d-4bd9-b530-b0392373dd24",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "360a7d3f-cd57-41cc-bacb-68b58b05df34",
      "clientId": "neone-client",
      "name": "NE:ONE Client",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "lx7ThS5aYggdsMm42BP3wMrVqKm9WpNY",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "client.secret.creation.time": "1690372478",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "214c1400-4637-4422-8f83-e51226ebac86",
          "name": "ONE Record Identifier",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "logistics_agent_uri",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "logistics_agent_uri",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aaf40cf9-ac21-4c9e-a850-fa2d0f1a9fed",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c4a8466-873a-4b4b-a73f-69404d09ddc3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6653e42-81d9-4f93-b972-7718ddf7de89",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5f5835ca-8994-495a-bf16-22c7d07d9cc5",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dfdb9419-3c06-4b92-987b-5af0c4c203f0",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/neone/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/neone/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "7268ae55-597b-4d7a-8995-27947af415fb",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "191ac420-fb00-4f67-8ffd-7f9606bd1b08",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "becebbf1-113e-4f74-b689-da1c14f5b57d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "ee752427-1bab-4f30-a9a8-b7cdc905fb11",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ce8e81bd-3193-4639-9332-a462c8a45d0e",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "69b7f5d4-9451-4204-a55c-e164254d3924",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2fdd28c7-7c43-4d8c-83d2-04e268ec8c2d",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "5eb306c1-810a-4338-beb3-a2de620709ec",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "95686b58-d1f3-4616-be53-df894b81a01a",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "38f4597c-b03d-4045-b2b7-af1a01a9fc92",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b96e41d8-ddd7-43d3-886d-24667889c41e",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c79fdb5b-7b65-422e-8830-c0a890292c4f",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "b168b583-b358-4bc1-9f82-da0ad1426d4f",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "275237aa-703e-4109-ac14-6b303aa98cad",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "1f819899-11df-46cf-baec-0ac15672e41c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "df45ae1c-a523-44ad-829c-758910f5b31b",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3984d587-eca6-46fc-8579-984b3c33f454",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f673edb6-0685-4fa1-9a3e-ab72ea3a59a2",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eb29bf30-f20d-4e89-89fd-279c7e748764",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e0ef3717-1dbc-4e46-a54a-1045b92e1bd0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "81d19c66-1bc2-499a-a0ad-c20be7626565",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7e5e5232-6987-4f9a-969e-4b556a19ad5b",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e093bdb1-0396-43e5-8ae4-558b4f9a6146",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0b644ab2-aa9f-4c48-bb61-ffb00ab8ce20",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "25890427-5f9d-40ab-9dd3-6c7c9f065e66",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "f0e7a367-0b7a-4f4e-acd2-e5a9b5c7e1ac",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a572bda-b431-423b-9521-f0e3290fcdae",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a6d733ba-646a-41e7-8fc3-99a9484f3647",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1641c19c-f351-44e4-a2d1-f9c8989ad3bf",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "d1ac24c1-24ba-43fc-9826-80b95f32875d",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "af5dddab-ab63-4885-a42d-a65241e44dce",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "28e33acf-0009-45dc-bc8b-84dbf33816e0",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "fc4d50b5-2168-43c3-bbd9-6b4996250e6f",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "0c6d8e11-0896-46df-8661-2456ee2baff2",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a3cfd28f-7843-4f05-ab84-0a04bc823608",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "910eeb60-b77e-4acb-b31f-92a7ef8cc96a",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "50c21dd8-484b-4d71-afa9-bfbd43b4f778",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "32f1779b-8a92-4e3c-a0ca-d0a5d947e333",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c31c09d6-5dfd-4a3d-bf60-693bc320b295",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c92162f5-f30e-4e68-8370-136c4ed6d8d3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "6a83eaf6-02fa-4ca2-a0ac-e19e5cec70b6",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8da11554-9443-405c-971a-938059c72619",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "2736963e-77ff-4190-98b5-66ad151bc734",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "1c8275e7-fe72-4a3e-a7d9-127e2d88ab87",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "28fc0781-836e-468f-9b9f-4ffb69aebb61",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7e609d73-c3c4-4eed-bad3-bcaaf827d469",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "652548af-a07f-4bac-b566-6a150f0fae9a",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAtCU/w2k1N7pU1clpNHu9OET6vMY1lMkB+IqRFnEShZjHGfq0Ahb1WLOVNIbSen3OIOHO+9Jhbi7/FZ7ke2C9NsNmD8qRxDaeOWR2PSWo1HyRm+9ZxMtWzR+O8Cgn98yV4nFqRWDDUz7WWBOGwY+eUfHYnCeh/USWDf1JDspz9/dDC2g7noYhw5SHezXgaivRFBEBJv7Mws8XxtGPg21O+HIdqvScvpD+LfkQ7V05kxyy5FrtmJZ1+Pj6PkJDBzQh3Yjx/5Tmcw+Xb3WNt29vB5UFnWCFi0/mh84WnnB6L5RqzB4cvswv98juJt45OHq+ep8WeKXyDBsUNFIjjXSQIwIDAQABAoIBAAspp7rXIRoT7L/WnDNJW59J/vOFoLpYfkvFYloupYQrxGKiu1bJz2gwsJUxqYc3lndJJsdJ8Qmf1eSkFOpkQzVKhF+EIOY0sDdEN2NwmvaXxXoRKdHc+8L4KqZNBrT/M2Z1uq0T4uacpTGN/DKwUJIpV0/N0ObdwiKZyFYnS2pZCGwqqAI5pZsBIhW4I1wYUXkOMNBzbig/qxp6nCf2fHeKX9dDH3ZtcXqWCyYm7N0mPqXXtkSHXpTPSdTJGdOP9iQc30QzpPLG+67fHFp22vIRDVNN6yLMqOGdGj02A+5qChFLiuSzENsB4Ra8NPq1i+W75auHEezHpmQdak5zZwECgYEA19y7D0n9xN32pPcUAeFtw5EM44eBPPFbnm1oMlAm7mx80ogmgNZ5RKbI8UqucJBCMBwT2Q9KyZYJe+fMTff0d0iYJC1LH0fHS9a3GJ0C66FR35iNbHIRG5ESIR/rr2Ecc6kBhQ3CNj+A6RWvlICSeQGDQ0Z1wWro4w9KxQDxq6MCgYEA1aRdWuxZ+iMosLmTNTKWvnAQCcnWSCnXnsjx7cZd3Qvfpa6wr/MhYCMs/QPSFfoFc/Z2Wi3JTXBe9+9FUN12JoLZA7b/gk3lG0FShWTcALmpn+nEAQkeyhBkWDFoCaEFA/nYj9wIrgF8ZhugwutQT1o7ki0pWm8LSU2jTOgP0YECgYEAkgjpoDlNbk8/2nCxX2hT6teJobB9lW4vrmmT8V3aSLiqZX/olIcEeZZgISWGB+8AaC3Gm7VFwkU321SBGkpiYASDsQ3XYa0cvkjfi85FOIXlruA05SXyPvURD8nZl8eaCQFQXuRk/HBP1OBv7YZiEW0dkXjsl1KthVdGHSs7VAMCgYAhutiOYWB3UJO9Cx+Ft537JSAzG228aPbE9/7SRo5NNvGxa9ozfVRYpFUXAUJq+9VekJvw8uekVUh5JoqwELb1r5TptDu06+1vFyobK2hcqPNx7utmKnV0+4+MKQi+9HAhR5H8bIXmSw/D4zrHa3V7gciD9KNhxsRmZ16P5teQgQKBgQC0PQBMSBY80MAkm7bTdRH42r5nibyHArJB8Loa4+INfoof7BiuWHrKn+S0ajRqnHe4qGUCSI/iovBTRw2w7K1OxkAgvH6HO/SgeG1YlmAdD1309WDof9r9YZ3mo+Teq22eb3CUMc72oufcrUzJA9Jj3Yz4JqUySCvBVDLrN0Z0jQ=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICmTCCAYECBgGJkgyHQTANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVuZW9uZTAeFw0yMzA3MjYxMTUyMjFaFw0zMzA3MjYxMTU0MDFaMBAxDjAMBgNVBAMMBW5lb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtCU/w2k1N7pU1clpNHu9OET6vMY1lMkB+IqRFnEShZjHGfq0Ahb1WLOVNIbSen3OIOHO+9Jhbi7/FZ7ke2C9NsNmD8qRxDaeOWR2PSWo1HyRm+9ZxMtWzR+O8Cgn98yV4nFqRWDDUz7WWBOGwY+eUfHYnCeh/USWDf1JDspz9/dDC2g7noYhw5SHezXgaivRFBEBJv7Mws8XxtGPg21O+HIdqvScvpD+LfkQ7V05kxyy5FrtmJZ1+Pj6PkJDBzQh3Yjx/5Tmcw+Xb3WNt29vB5UFnWCFi0/mh84WnnB6L5RqzB4cvswv98juJt45OHq+ep8WeKXyDBsUNFIjjXSQIwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA7owoC6bKrgSmQhV2prs5y8GcAoJLM1qWJ6dVHBk5rPY7ANcY6ewxH9pZqto7hz4SSVGemt70ym1mmrmi8+82OmTf2qOdJLQw7Q/Wux1w4jXkfa08gxVDPgF8j+mI42AJsQt9jkGwexsbW6Lqf2KufSmMfC6MtYYQvmaUYOJNMPmYW5DH63TpYqSZ8DdUzAvCYs2cKbGsa+SRnhVehCjbc688byyHpKrk3dWD3hQG5nQt+aO0t/K7VwEcU0iOy9gBezy6IA+irjff0TUzDg/gMbyevlbIA2t1WbMojQZWu6+L5Ta7BVbE7EDdx2iC5U0LvwHsDdabiLn2tdzoUUn13"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "b05d5f31-1af5-4b83-b2e5-79a455973d3c",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEA92w7DsEyZA0aS0MpAOj7I/NoiFxyqMYbMsedKgpMmj1STwwc1wU8gUlnffasYgfDJFbOotwX4Ch0frfYYkrsdDKyGn9Xs7x1r7HcU4tr/OIQPsUC03IicPan6C6GtLLNXwWMRUS3lMcw+u1wUS0KF4off0s1x8U8z4NWfWNnjsw2o/RBbsELPgbmokjPopcWVV4lNHhOgYI5yr+nxd2OaJC9DlCdGe6a6t9YJiQS5iIeIT0f1qIw/SS0nQZdReXnJCkyqw3ZdFUPoIXdh+llCuL16HKYNh4X83QnAKNEU5OUHSOC8QOjD7wl6Q32U+CwMlvh24P+2LHcv3ZgYf8yTQIDAQABAoIBAAF2I0Tk7cAzxSgaspylsjQRrsyjOBFYpVBBXC8vIymnEpNS0g+buKac8VFlIwBl32KlRRNVg1iugNtK2k1sVQKK+R4HuU4lXxXz+svwiVIZgu1H/a1OG+YEa7GeSgJ0GXhRmsZwbK1FXjYhO1NE4Wfyx81we1vR7mmXp1pKwTp0fSXx7YaRRcaesVkXnPBA5E+FlqV5pcF/TR8mB11jK6fK81qucYb39TCbzXILZ11VHB57rZamIJGNM59cLkQKWkZueP0nR4H6D4f8UfZYqX8va6lB8lJECqxHZOIMiF11j3bdaxDMOGUo+BIKrxBkjNPEMp7ZhxG3NnYr9RWJgjkCgYEA/msVK54VC25K3b2js66L9sS59+9/7FN6f7AgcXA5fRMCZJpUAa4tPFdEwHs0RKGNNm4oN1W2y9YiwJTZvOwkaVcti+mXXzZ89KOOy4tMrIvME3jTBPesBZSHtxjTZdX4WvUWpq2qLSUfdG4X9E9t3Gi2ZtS6/p27xuir01B6SYUCgYEA+PYDq/bj8/qmXkDgqpkH6N58iaEtnbTp3+RD8YJUqvYjSETeCLrGsLrWFtCBXiu9UmDtsZB7nG70ytrerK3QQJPPzWs17H4vmk3B8eDnytQPwb+8OsY1c93Vri5TpVK++CCgzE8fvUvWqRYvL5Tpxtkn0Tw5ClmGhfJJ9/KpfCkCgYEAkjqx/FPr/Jnz5ectxAS65abEzMCXYhnI+sMcopbCNCVM5s3dIuodjeUK2yb1L807AOHns4ZMfnQhnVbwnymK9BDrWNN18X+76lBnro3uD+556Wc0wlIoSTzJlG9scce962mbD0oZ2cDQh3cPxZgxqNF2pTv4DohSeU0aFWbYIpECgYBtmUgGhTrW5molJiSBlbrgrklfAWCmg8VNthyfDkQduxvPLdodN7ROiwHCq2m4PkMrJ9acC8IPHN2RDAdpN19tfmTFxsPHZ8mnAUI3LE5+gRqqrbC8oxNW/bqa4nQaXLILY7nGF7MeT2uhpk2Bgenkiya3Ou7VepH5F6+ugtpP+QKBgQDcnbgu91j5wR9Gk1wWstzLwQyR/YfQD5jARzXMoFrGraMFx49THoAxOtUaZlLOVyIDPnJL2JLB6wqopmR+6r4yIrAC816+w6kycKccQB3/htNB5qCCdDT0PcyFwVbD+2e3auOnwbdyhC+UTVtj0IQ/zUSjCYajwQ2k/yoLESsFWQ=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICmTCCAYECBgGJkgyGGDANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVuZW9uZTAeFw0yMzA3MjYxMTUyMjFaFw0zMzA3MjYxMTU0MDFaMBAxDjAMBgNVBAMMBW5lb25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA92w7DsEyZA0aS0MpAOj7I/NoiFxyqMYbMsedKgpMmj1STwwc1wU8gUlnffasYgfDJFbOotwX4Ch0frfYYkrsdDKyGn9Xs7x1r7HcU4tr/OIQPsUC03IicPan6C6GtLLNXwWMRUS3lMcw+u1wUS0KF4off0s1x8U8z4NWfWNnjsw2o/RBbsELPgbmokjPopcWVV4lNHhOgYI5yr+nxd2OaJC9DlCdGe6a6t9YJiQS5iIeIT0f1qIw/SS0nQZdReXnJCkyqw3ZdFUPoIXdh+llCuL16HKYNh4X83QnAKNEU5OUHSOC8QOjD7wl6Q32U+CwMlvh24P+2LHcv3ZgYf8yTQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBcJcOUKF9ObHVMNg+9e4yacG30iISm7rNnIXlFDjDAzug0mTmqzMwwQyBOzf7Y8hoo+TVG+Ta01OECkmnSTrhJT2X4DoSTlxlh6yvHGza6pKxZ0ViTpCf2tML9+YWxN8Q4ofRtLFSiT+8od25mRAHFNqo9+siGwILIZ2ACBo7kibIf1sbfWI7NR+pQiC2Tl4l+T3kzggUJvi3YDjs4D+UqCbGCBaueEWzCWF4KjVSUOxySBzl5lZPCrKzqhqzQRAeIWRWOLLeX5xqc49nZzxc2KzfQOl2Cgb3QLz0EoGXEXBw4HfebmHN2qsefeMcFQLyDdBVwBf3APUIyyVIUnFOr"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "e5484240-f7fa-4487-b4bc-fc127a9ff58f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "6779251e-854c-4049-af80-561766ac5282"
          ],
          "secret": [
            "n8uDjKtetEGA5ndlgN3e0w"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "9f48a79d-dacc-45b2-abee-538813d9b0bb",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "3f5ae0c9-45f4-4528-99d1-84889bd55861"
          ],
          "secret": [
            "CEARNg48Q30SyskfluzxNMKbAveI5d0ww2PR7zo22XeaLNRTUJdI2vBcgXk2cZ0fl7wBL3J9LUJPSuO1zz1wjQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "be5f45fe-46eb-4971-b6a0-e41b7eda02b7",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "70da7562-4c2d-4d9e-ba9a-af15fdf28ab1",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1841cbec-7c91-493b-aa13-896812a2cd66",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f1cce9f-5211-44d5-a7d9-b001399b13e0",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "68ef66d8-3c4a-4b6b-b54a-291f7d9824c5",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c877785f-acc9-4fa1-9703-b668df9e60cd",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "342ea3b3-6464-4f4f-b10b-7544b1eca2f0",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "259f5c6a-80a1-4d07-a050-defbdabc078f",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d7ecbcb8-d53b-4c4e-9020-b74bbfc3cf24",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dbfea26c-9d3f-45ed-8441-438e772a9257",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ebb0fcf4-aa6e-4a00-b633-3fa94d5317ca",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3d29155d-61f3-4259-a4d8-81f7e9b3279d",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85448303-6ead-46c4-bc3c-28fdd9b8e7f8",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e69f0fa4-b937-4296-8674-04a4f16284c6",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3bed57ca-9691-43b6-af99-980a7b1f7468",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "403fb62f-e95f-4549-b60f-3ad681e54f47",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7ed0c65f-efd4-4390-a6d4-48a227556b3f",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f920816-d407-423a-8f15-9fe27c26f89b",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "3f1bfc4c-31b7-47fe-bbef-10cdf97ddd58",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "796bbe45-f437-418d-be43-13e804b3d8fb",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
